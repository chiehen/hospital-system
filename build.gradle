plugins {
	id 'java'
	id 'org.springframework.boot' version '3.1.10'
	id 'io.spring.dependency-management' version '1.1.4'
	id "com.google.protobuf" version "0.9.4"
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
  // implementation "io.grpc:grpc-netty:1.15.1"

  implementation 'net.devh:grpc-spring-boot-starter:3.0.0.RELEASE' exclude group: 'io.grpc', module: 'grpc-netty-shaded' // For both
	// implementation 'net.devh:grpc-spring-boot-starter:3.0.0.RELEASE'
	implementation 'com.google.protobuf:protobuf-java:3.6.1'
  runtimeOnly 'io.grpc:grpc-netty-shaded:1.62.2'
  implementation 'io.grpc:grpc-protobuf:1.62.2'
  implementation 'io.grpc:grpc-stub:1.62.2'
	// implementation 'io.grpc:grpc-stub:1.15.1'
	// implementation 'io.grpc:grpc-protobuf:1.15.1'
	if (JavaVersion.current().isJava9Compatible()) {
    // Workaround for @javax.annotation.Generated
    // see: https://github.com/grpc/grpc-java/issues/3633
    implementation 'javax.annotation:javax.annotation-api:1.3.1'
  	}
	runtimeOnly 'com.h2database:h2'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

tasks.named('bootBuildImage') {
	builder = 'paketobuildpacks/builder-jammy-base:latest'
}

tasks.named('test') {
	useJUnitPlatform()
}


protobuf {
  protoc {
    // The artifact spec for the Protobuf Compiler
    artifact = 'com.google.protobuf:protoc:3.6.1:osx-x86_64'
  }


  plugins {
    // Optional: an artifact spec for a protoc plugin, with "grpc" as
    // the identifier, which can be referred to in the "plugins"
    // container of the "generateProtoTasks" closure.
    grpc {
      artifact = 'io.grpc:protoc-gen-grpc-java:1.62.2:osx-x86_64'
    }
  }
  generateProtoTasks {
    ofSourceSet('main').configureEach {
      plugins {
        // Apply the "grpc" plugin whose spec is defined above, without
        // options.  Note the braces cannot be omitted, otherwise the
        // plugin will not be added. This is because of the implicit way
        // NamedDomainObjectContainer binds the methods.
        grpc { }
      }
    }
  }
}