syntax = "proto3";

option java_package = "com.example.grpc";
option java_outer_classname = "HospitalProto";


import "google/protobuf/empty.proto";
import "google/protobuf/wrappers.proto";

package model;

// Define the messages for Hospital and Patient entities
message ID {
    int64 id = 1;
}


message HospitalData {
    string name = 1;
    string address = 2;
}

message Hospital {
    string name = 1;
    string address = 2;
    int64 id = 3;
}
message Hospitals {
    repeated Hospital hospitals = 1;
}

message PatientData {
    string firstName = 1;
    string lastName = 2;
    string sex = 3;
    int32 age = 4;
}

message Patient {
    // Name of the patient
    string firstName = 1;
    // Age of the patient
    string lastName = 2;
    string sex = 3;
    int32 age = 4;
    int64 id = 5;
}

message Patients {
    repeated Patient patients = 1;
}

// Define the service for hospital operations
service HospitalService {
    rpc FakeOp(google.protobuf.Int64Value) returns (google.protobuf.Int64Value);
    // Operations for hospitals
    rpc CreateHospital(HospitalData) returns (ID);
    rpc ModifyHospital(Hospital) returns (ID);
    rpc DeleteHospital(ID) returns (ID);
    rpc ListHospital(google.protobuf.Empty) returns (Hospitals);

    // // Operations for patients
    rpc CreatePatient(PatientData) returns (ID);
    rpc ModifyPatient(Patient) returns (ID);
    rpc DeletePatient(ID) returns (ID);

    // // Operation to register a patient in a hospital
    rpc RegisterPatientInHospital(RegisterPatientRequest) returns (google.protobuf.Empty);

    // // Operations to list patients and hospitals
    rpc ListPatientsInHospital(ID) returns (Patients);
    rpc ListHospitalsForPatient(ID) returns (Hospitals);
}

// // Request message to register a patient in a hospital
message RegisterPatientRequest {
    int64 patient_id = 1;
    int64 hospital_id = 2;
}
